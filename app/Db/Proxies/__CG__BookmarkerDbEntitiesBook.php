<?php

namespace DoctrineProxies\__CG__\Bookmarker\Db\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \Bookmarker\Db\Entities\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'id', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'ext', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'filePath', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'title', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'year', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'lang', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'authors', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'genre', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'mime', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'user', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'bookCovers', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'description', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'comments'];
        }

        return ['__isInitialized__', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'id', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'ext', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'filePath', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'title', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'year', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'lang', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'authors', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'genre', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'mime', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'user', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'bookCovers', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'description', '' . "\0" . 'Bookmarker\\Db\\Entities\\Book' . "\0" . 'comments'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setExt($ext)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExt', [$ext]);

        return parent::setExt($ext);
    }

    /**
     * {@inheritDoc}
     */
    public function getExt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExt', []);

        return parent::getExt();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilePath($filePath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilePath', [$filePath]);

        return parent::setFilePath($filePath);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilePath', []);

        return parent::getFilePath();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setLang($lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLang', [$lang]);

        return parent::setLang($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLang', []);

        return parent::getLang();
    }

    /**
     * {@inheritDoc}
     */
    public function addAuthor(\Bookmarker\Db\Entities\Author $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAuthor', [$author]);

        return parent::addAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuthor(\Bookmarker\Db\Entities\Author $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuthor', [$author]);

        return parent::removeAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthors', []);

        return parent::getAuthors();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenre(\Bookmarker\Db\Entities\Genre $genre = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenre', [$genre]);

        return parent::setGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenre', []);

        return parent::getGenre();
    }

    /**
     * {@inheritDoc}
     */
    public function getMime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMime', []);

        return parent::getMime();
    }

    /**
     * {@inheritDoc}
     */
    public function setMime($mime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMime', [$mime]);

        return parent::setMime($mime);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownloadLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownloadLink', []);

        return parent::getDownloadLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Bookmarker\Db\Entities\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addBookCover(\Bookmarker\Db\Entities\BookCovers $bookCover)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBookCover', [$bookCover]);

        return parent::addBookCover($bookCover);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBookCover(\Bookmarker\Db\Entities\BookCovers $bookCover)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBookCover', [$bookCover]);

        return parent::removeBookCover($bookCover);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookCovers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookCovers', []);

        return parent::getBookCovers();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainCover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainCover', []);

        return parent::getMainCover();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\Bookmarker\Db\Entities\Comments $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\Bookmarker\Db\Entities\Comments $comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

}
