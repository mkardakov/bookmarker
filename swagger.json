{
    "swagger": "2.0",
    "info": {
        "title": "Bookmarker API",
        "description": "RESTful API developed for e-books sharing and management",
        "contact": {
            "name": "Mikhail K",
            "url": "https://github.com/mkardakov",
            "email": "work.zjiodeu@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        },
        "version": "0.01"
    },
    "host": "localhost:82",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/author": {
            "get": {
                "summary": "Retrieve all authors",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "max_record_number",
                        "in": "query",
                        "description": "limitation param",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "authors set",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Author"
                            }
                        }
                    }
                }
            }
        },
        "/book/{id}": {
            "get": {
                "summary": "Retrieve a book by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of book to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book data",
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    },
                    "404": {
                        "description": "Book not found by id"
                    }
                }
            },
            "delete": {
                "summary": "Delete book by ID",
                "operationId": "remove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book that needs to be deleted",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/book": {
            "get": {
                "summary": "Retrieve all books",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "max_record_number",
                        "in": "query",
                        "description": "limitation param",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "books set",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an existiting book",
                "description": "",
                "operationId": "replaceBook",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book that needs to be update",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Book object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "year": {
                                    "type": "string"
                                },
                                "lang": {
                                    "type": "string"
                                },
                                "genre_id": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "author_ids": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                }
                            }
                        },
                        "minimum": 1
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid Data received"
                    },
                    "404": {
                        "description": "Book not found by id"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            },
            "post": {
                "summary": "Creates a new book based on received file",
                "operationId": "addBook",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "book",
                        "in": "formData",
                        "description": "book to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "book is uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "contentUri": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/book/{filename}": {
            "get": {
                "summary": "Show or Download book",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "path",
                        "description": "name of the book to download",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book data",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "Book file not found"
                    }
                }
            }
        },
        "/genre": {
            "get": {
                "summary": "Retrieve all genres",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "max_record_number",
                        "in": "query",
                        "description": "limitation param",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "genres set",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Genre"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new genre",
                "operationId": "add",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Genre object that needs to be added to the system",
                        "required": true,
                        "schema": {
                            "properties": {
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "genre is uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "contentUri": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request"
                    }
                }
            }
        },
        "/genre/{id}": {
            "get": {
                "summary": "Retrieve a genre by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of genre to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "genre data",
                        "schema": {
                            "$ref": "#/definitions/Genre"
                        }
                    },
                    "404": {
                        "description": "Genre not found by id"
                    }
                }
            },
            "put": {
                "summary": "Updates a genre",
                "operationId": "replace",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the genre that needs to be update",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Genre object that needs to be updated",
                        "required": true,
                        "schema": {
                            "properties": {
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid Data received"
                    },
                    "404": {
                        "description": "Book not found by id"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            },
            "delete": {
                "summary": "Delete genre by ID",
                "operationId": "remove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the genre that needs to be deleted",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Genre not found"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        }
    },
    "definitions": {
        "Author": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Book": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ext": {
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                },
                "lang": {
                    "type": "string"
                },
                "authors": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Genre": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}